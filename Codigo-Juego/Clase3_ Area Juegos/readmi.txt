## Clase 3
Vamos a ir agregando los distintos pasos realizados

cd D:\OneDrive - frsr.utn.edu.ar\Programacion\UTN - San Rafael\UTN Tercer Semestre\UTN-TercerSemestre\Codigo-Juego\Clase3_ Area Juegos
mkdir Avatar
mkdir public
cd public 
mkdir assets # mkdir para crear carpetas.
mkdir js 
mkdir css
touch avatar.html    #touch para crear un archivo
ls  # ls para listar archivos y carpetas (en Windows puedes usar dir).
ctrl + k + c # se pone como comentario el codigo seleccionado
ctrl + k + u  # se quita el comentario 

<label for="Zuko">Zuko</label>: Esta etiqueta <label> sirve para proporcionar un nombre 
visible al usuario. El atributo for="Zuko" est√° vinculado al id="Zuko" del elemento de entrada,
 lo que significa que cuando el usuario hace clic en el texto "Zuko", el bot√≥n de opci√≥n
  correspondiente se seleccionar√° autom√°ticamente.

<input type="radio" name="personaje" id="Zuko">: Aqu√≠ tienes un bot√≥n de opci√≥n (radio button) 
que permite al usuario elegir entre m√∫ltiples opciones. Su atributo name="personaje" indica que
 puede formar parte de un grupo de botones de opci√≥n, y el id="Zuko" lo vincula con el <label> 
 anterior.


 function seleccionarPersonajeJugador() {
    if (document.getElementById('Zuko').checked) {
        alert("HAS SELECCIONADO A ZUKO üî•");
    } else if (document.getElementById('Katara').checked) {
        alert("HAS SELECCIONADO A KATARA üíß");
    } else if (document.getElementById('Aang').checked) {
        alert("HAS SELECCIONADO A AANG üå™Ô∏è");
    } else if (document.getElementById('Toph').checked) {
        alert("HAS SELECCIONADO A TOPH üå±");
    } else if (document.getElementById('Sokka').checked) {
        alert("HAS SELECCIONADO A SOKKA ‚öîÔ∏è");
    } else {
        alert("Por favor, selecciona un personaje antes de continuar.");
    }
}

## Clase 4
Como buenas practicas se aconseja que el script este siempre en el body y no al principio 
window.addEventListener('load', iniciarJuego)

para eviar errores agregamos window.addEventListener('load', iniciarJuego) y  la funcion 
function iniciarJuego(){
   let botonPersonajeJugador = document.getElementById("boton-personaje");

botonPersonajeJugador.addEventListener("click", seleccionarPersonajeJugador);
}
 ¬øCon que fin? para evitar errores si el <script src="./js/avatar.js"></script> no esta en body sino
 al principio en el head

para trabajar desde la consola del navegador ctrl+Shift+i
document.getElementById('anng')


Corregimos la funcion 

function seleccionarPersonajeJugador() {
    if (document.getElementById('Zuko').checked) {
        alert("HAS SELECCIONADO A ZUKO üî•");
    } else if (document.getElementById('Katara').checked) {
        alert("HAS SELECCIONADO A KATARA üíß");
    } else if (document.getElementById('Aang').checked) {
        alert("HAS SELECCIONADO A AANG üå™Ô∏è");
    } else if (document.getElementById('Toph').checked) {
        alert("HAS SELECCIONADO A TOPH üå±");
    } else if (document.getElementById('Sokka').checked) {
        alert("HAS SELECCIONADO A SOKKA ‚öîÔ∏è");
    } else {
        alert("Por favor, selecciona un personaje antes de continuar.");
    }
}
por 



function seleccionarPersonajeJugador() {
    let inputZuko = document.getElementById('Zuko')
    let inputKatara = document.getElementById('Katara')
    let inputAang = document.getElementById('Aang')
    let inputToph = document.getElementById('Toph')
    let inputSokka = document.getElementById('Sokka')
    if (inputZuko.checked) {
        alert("HAS SELECCIONADO A ZUKO üî•");
    } else if (inputKatara.checked) {
        alert("HAS SELECCIONADO A KATARA üíß");
    } else if (inputAang.checked) {
        alert("HAS SELECCIONADO A AANG üå™Ô∏è");
    } else if (inputToph.checked) {
        alert("HAS SELECCIONADO A TOPH üå±");
    } else if (inputSokka.checked) {
        alert("HAS SELECCIONADO A SOKKA ‚öîÔ∏è");
    } else {
        alert("Por favor, selecciona un personaje antes de continuar.");
    }
}
hay que seleccionar siempre todo a traves de una variable


element.innerHTML
Baseline Widely available *
Resumen
La propiedad Element.innerHTML devuelve o establece la sintaxis HTML 
describiendo los descendientes del elemento.

Al establecerse se reemplaza la sintaxis HTML del elemento por la nueva.

Nota: Si un nodo tiene un texto secundario que incluye los caracteres (&), 
(<), o (>), innerHTML devuelve estos caracteres como &amp, &lt y &gt 
respectivamente. Use Node.textContent para conseguir una copia correcta 
del contenido de estos nodos de texto.

Para insertar el c√≥digo HTML en el documento en lugar de cambiar el 
contenido de un elemento, use el m√©todo insertAdjacentHTML().

Sintaxis
js
Copy to Clipboard
const content = element.innerHTML;

element.innerHTML = htmlString;
Valor
La variable constante content contiene un DOMString que contiene el c√≥digo 
HTML serializado describiendo todos los descendientes de element. Cuando se 
establece el valor de innerHTML, se eliminan todos los descendientes de element, 
analiza la cadena htmString y asigna los nodos resultantes como descendientes de
 element.

Excepciones
SyntaxError
Se intent√≥ establecer el valor de innerHTML utilizando una cadena que no est√° formada correctamente en HTML

NoModificationAllowedError
Se intent√≥ insertar el c√≥digo HTML en un nodo cuyo elemento primario es document.

Notas de uso
La propiedad innerHTML de muchos tipos de elementos‚Äîincluyendo <body> o <html>‚Äîpuede ser devuelta o establecida. Esta propiedad se puede usar para ver el c√≥digo HTML de la p√°gina actual, incluida la que haya sido modificada din√°micamente:

Devolver la sintaxis HTML de un elemento
Devolver el valor de innerHTML hace que el agente de usuario serialice el fragmento HTML compuesto por los descendientes del elemento. La cadena resultante es devuelta.